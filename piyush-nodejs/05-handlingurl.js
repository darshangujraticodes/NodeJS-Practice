// url

/*

URL = Uniform Resource Locator 

consist of following componenet

components of URL 

1] protocols
2] domain name
3] path
4] query parameter

eg:  https://cstechtube.com/aboutus?channel=google
  
  protocols   =>  http: //  or https://
  http / https (Hypertext Transfer Protocol / Secure)

  domain name   =>  cstechtube.com 
  
  path   =>  /aboutus 
  It shows from which page request is generatd to user
  
  search query parameter   =>   ?channel=google&adsplatform=google
  This are the search query paramter which are used to filter or search specific element in content

*/

/*

HTTP Methods()

get
post
put 
patch
delete 


1] GET Request => It is a request generated by client or user to server to ask for certain information.
   eg. Browser by default generate get request methods to request data from server
   open youtube in browser -> inspect element -> Network -> in Name selection select url -> Header : Request Method : GET

   simple words : When you want to get some data from browser.

2] POST Request => when you want to send and mutate (add, update or change) some data in server 

3] PUT Request => It is used when you want to  upload file whether image, pdf, csv or doc on server  

4] PATCH Request => It is generally used to update the stored data in server.

5] DELETE Request => It is used to deleted the data from server.




Now Understand Why Web used Express if all things can be controlled thourgh http 

1] code redundancy  => 
  for every route you need to add http methods condition and execute as per logic requirement.
  "GET" from signup => will check whether user data is stored in server
  "POST" from signup => It will update or mutate the user data in server.

2] In long code form code standard get degrades and start confusion for coder to understand becoz 
switch case for every routing and inside switch condition we require http methods condition to check and operate data accordingly



*/

const http = require("http");

const PORT = 8000;

const fileOpr = require("fs");

const url = require("url");

const server = http.createServer((req, res) => {
  //   res.end("Hello From server !");

  if (req.url == "/favicon.ico") return res.end();

  // url library implementation

  const urlData = url.parse(req.url, true);

  console.log(urlData);

  const logs = `\n${new Date().toLocaleString()} : New Server Request from path 
  ${req.url} using HTTP ${req.method} Methods `;

  fileOpr.appendFile("./serverlogs.txt", logs, (error, result) => {
    if (error) {
      console.log(error);
    } else {
      switch (urlData.pathname) {
        case "/":
          res.end("Welcome to Homepage");
          break;
        case "/search":
          const searchQuery = urlData.query.searchQuery || "";
          res.end(`Results of your Search = "${searchQuery}" `);
          break;
        case "/contact":
          const email = urlData.query.email;
          const phone = urlData.query.phone;
          res.end(`Connect me on Email = ${email} and Phone = ${phone}`);
          break;
        case "/signup":
          const username = urlData.query.username;
          const usermail = urlData.query.usermail;
          const password = urlData.query.password;
          if (req.method === "GET") res.end("Fetch User Data from Server.");
          else if (req.method === "POST")
            res.end("Update User Data in Server.");
          else {
            res.end(
              `Connect me on Username = ${username}, EMail = ${usermail} & Password = ${password}`
            );
          }
          break;
        default:
          res.end("404 Page Not Found !");
      }
    }
  });
});

server.listen(PORT, () => {
  console.log("Server Started Successfully !");
});
